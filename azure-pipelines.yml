parameters:
- name: env
  displayName: Environment
  type: string
  default: dev
  values:
  - dev
  - test

trigger: none

resources:
- repo: self

variables:
  azure-connection: 'logixos-azure-connection'
  storage-resource-group: 'terraformStorage'
  storage-account: 'logixosterraform'
  storage-container: 'task4'
  storage-key: 'terraform.tfstate'
  img-name: 'pythonimage'
  container-registry: 'logixoscontainerreg'
  vm-image-name: 'ubuntu-latest'
  docker-file-path: '$(Build.SourcesDirectory)/Dockerfile'

stages:
- stage: Infrastructure_Provisioning
  displayName: "Provision ACR, Resource group on Azure"
  jobs:
    - job: Provision
      displayName: Validate and provision
      pool:
        vmImage: $(vm-image-name)
      steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTaskV4@4
        displayName: Terrform Init
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: $(azure-connection)
          backendAzureRmResourceGroupName: $(storage-resource-group)
          backendAzureRmStorageAccountName: $(storage-account)
          backendAzureRmContainerName: $(storage-container)
          backendAzureRmKey: $(storage-key)
      - task: TerraformTaskV4@4
        displayName: Terraform Plan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          commandOptions: '-var environment="${{ parameters.env }}"'
          environmentServiceNameAzureRM: $(azure-connection)
      - task: TerraformTaskV4@4
        displayName: Terraform Apply
        inputs:
          provider: 'azurerm'
          command: 'apply'
          commandOptions: '--auto-approve -var environment="${{ parameters.env }}"'
          environmentServiceNameAzureRM: $(azure-connection)
    - job: Build_Docker_And_Deploy
      dependsOn: Provision
      pool:
        vmImage: $(vm-image-name)
      steps:
        - task: DockerInstaller@0
          inputs:
            dockerVersion: '17.09.0-ce'
        - task: Docker@2
          inputs:
            command: 'build'
            Dockerfile: $(docker-file-path)
            repository: $(img-name)
            tags: $(Build.BuildId)
        - task: AzureCLI@2
          displayName: 'Push Docker Image to ACR'
          inputs:
            azureSubscription: $(azure-connection)
            scriptType: 'pscore'
            scriptLocation: 'inlineScript'
            inlineScript: |
              az acr login --name '$(container-registry)'
              docker tag $(img-name):$(Build.BuildId) $(container-registry).azurecr.io/$(img-name):$(Build.BuildId)
              docker push $(container-registry).azurecr.io/$(img-name):$(Build.BuildId)
